(*****************************************)
(* This file is autogenerated by grackle *)
(*    DO NOT MANUALLY EDIT THIS FILE     *)
(*****************************************)

From New.proof Require Import proof_prelude.
From New.proof Require Import github_com.tchajed.marshal.
From New.code Require Import github_com.mjschwenne.grackle.testdata.out.go.completeint_gk.
From New.generatedproof Require Import github_com.mjschwenne.grackle.testdata.out.go.completeint_gk.

Module completeInt_gk.
Section completeInt_gk.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

#[global]
Program Instance : IsPkgInit completeint_gk :=
  ltac2:(build_pkg_init ()).

Definition has_encoding (encoded:list u8) (args:completeint_gk.completeInt.t) : Prop :=
  encoded = (u32_le args.(completeint_gk.completeInt.one)) ++
              (u32_le args.(completeint_gk.completeInt.two)) ++
              (u32_le args.(completeint_gk.completeInt.three)) ++
              (u64_le args.(completeint_gk.completeInt.four)) ++
              (u64_le args.(completeint_gk.completeInt.five)) ++
              (u64_le args.(completeint_gk.completeInt.six)).

Lemma wp_Encode (args__c : completeint_gk.completeInt.t) (pre_sl : slice.t) (prefix : list u8) (dq : dfrac):
  {{{
        is_pkg_init completeint_gk ∗
        own_slice pre_sl (DfracOwn 1) prefix ∗
        own_slice_cap w8 pre_sl
  }}}
    completeint_gk @ "Marshal" #pre_sl #args__c
  {{{
        enc enc_sl, RET #enc_sl;
        ⌜ has_encoding enc args__c ⌝ ∗
        own_slice enc_sl (DfracOwn 1) (prefix ++ enc) ∗
        own_slice_cap w8 enc_sl
  }}}.

Proof.
  iIntros (?) "[Hown Hsl] HΦ".
  wp_rec. wp_pures.
  iUnfold own in "Hown". iNamed "Hown". rewrite Hown_struct.
  wp_apply (wp_ref_to); first by val_ty.
  iIntros (?) "Hptr". wp_pures.

  wp_load. wp_apply (wp_WriteInt32 with "[$Hsl]").
  iIntros (?) "Hsl". wp_store.

  wp_load. wp_apply (wp_WriteInt32 with "[$Hsl]").
  iIntros (?) "Hsl". wp_store.

  wp_load. wp_apply (wp_WriteInt32 with "[$Hsl]").
  iIntros (?) "Hsl". wp_store.

  wp_load. wp_apply (wp_WriteInt with "[$Hsl]").
  iIntros (?) "Hsl". wp_store.

  wp_load. wp_apply (wp_WriteInt with "[$Hsl]").
  iIntros (?) "Hsl". wp_store.

  wp_load. wp_apply (wp_WriteInt with "[$Hsl]").
  iIntros (?) "Hsl". wp_store.


  wp_load. iApply "HΦ". iModIntro. rewrite -?app_assoc.
  iFrame. iPureIntro.

  done.
Qed.

Lemma wp_Decode (enc : list u8) (enc_sl : slice.t) (args__c : completeint_gk.completeInt.t) (suffix : list u8) (dq : dfrac):
  {{{
        is_pkg_init completeint_gk ∗
        ⌜ has_encoding enc args__c ⌝ ∗
        own_slice enc_sl dq (enc ++ suffix)
  }}}
    completeint_gk @ "Unmarshal" #enc_sl
  {{{
        suff_sl, RET (#args__c, suff_sl);
        own_slice suff_sl dq suffix
  }}}.

Proof.
  iIntros (?) "[%Henc Hsl] HΦ". wp_rec.
  wp_apply wp_ref_to; first done.
  iIntros (l__s) "Hs". wp_pures.
  
  wp_apply wp_ref_of_zero; first done.
  iIntros (l__one) "Hone". wp_pures.
  
  wp_apply wp_ref_of_zero; first done.
  iIntros (l__two) "Htwo". wp_pures.
  
  wp_apply wp_ref_of_zero; first done.
  iIntros (l__three) "Hthree". wp_pures.
  
  wp_apply wp_ref_of_zero; first done.
  iIntros (l__four) "Hfour". wp_pures.
  
  wp_apply wp_ref_of_zero; first done.
  iIntros (l__five) "Hfive". wp_pures.
  
  wp_apply wp_ref_of_zero; first done.
  iIntros (l__six) "Hsix". wp_pures.
  
  rewrite Henc. rewrite -?app_assoc.

  wp_load. wp_apply (wp_ReadInt32 with "[$Hsl]"). iIntros (?) "Hsl".
  wp_pures. wp_store. wp_store.

  wp_load. wp_apply (wp_ReadInt32 with "[$Hsl]"). iIntros (?) "Hsl".
  wp_pures. wp_store. wp_store.

  wp_load. wp_apply (wp_ReadInt32 with "[$Hsl]"). iIntros (?) "Hsl".
  wp_pures. wp_store. wp_store.

  wp_load. wp_apply (wp_ReadInt with "[$Hsl]"). iIntros (?) "Hsl".
  wp_pures. wp_store. wp_store.

  wp_load. wp_apply (wp_ReadInt with "[$Hsl]"). iIntros (?) "Hsl".
  wp_pures. wp_store. wp_store.

  wp_load. wp_apply (wp_ReadInt with "[$Hsl]"). iIntros (?) "Hsl".
  wp_pures. wp_store. wp_store.

  wp_load. wp_load. wp_load. wp_load. wp_load. wp_load. wp_load.
  wp_pures. iApply "HΦ". iModIntro. rewrite ?string_to_bytes_to_string. iFrame.
  iPureIntro. reflexivity.
Qed.

End completeInt_gk.
End completeInt_gk.

