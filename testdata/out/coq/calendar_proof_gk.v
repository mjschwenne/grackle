(*****************************************)
(* This file is autogenerated by grackle *)
(*    DO NOT MANUALLY EDIT THIS FILE     *)
(*****************************************)

From New.proof Require Import proof_prelude.
From New.proof Require Import github_com.tchajed.marshal.
From New.code Require Import github_com.mjschwenne.grackle.testdata.out.go.calendar_gk.
From New.generatedproof Require Import github_com.mjschwenne.grackle.testdata.out.go.calendar_gk.
From Grackle.test Require Import event_proof_gk.
From New.code Require Import github_com.mjschwenne.grackle.testdata.out.go.event_gk.

Module calendar_gk.
Section calendar_gk.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

#[global]
Program Instance : IsPkgInit calendar_gk :=
  ltac2:(build_pkg_init ()).

Record C :=
    mkC {
        hash' : list u8;
        events' : list Event_gk.C;
        }.

Definition has_encoding (encoded:list u8) (args:C) : Prop :=
  ∃ (events_enc : list u8), 
  encoded = (u64_le $ length $ args.(hash')) ++ args.(hash') ++
              (u64_le $ length $ args.(events')) ++ events_enc
  /\ length args.(hash') < 2^64
  /\ length args.(events') < 2^64.

Definition own (args__v: calendar_gk.S.t) (args__c: C) (dq: dfrac) : iProp Σ :=
  ∃ (l__events : list event_gk.S.t), 
  "Hown_hash" ∷ own_slice args__v.(calendar_gk.S.Hash') dq args__c.(hash') ∗
  "Hown_events_sl" ∷ own_slice args__v.(calendar_gk.S.Events') dq args__c.(events') ∗
  "Hown_events_own" ∷ ([∗ list] x;c ∈ l__events;args__c.(events'), Event_gk.own x c dq).

Lemma wp_Encode (args__c : calendar_gk.S.t) (pre_sl : slice.t) (prefix : list u8) (dq : dfrac):
  length args__c.(calendar_gk.S.Hash') < 2^64 ->
  {{{
        is_pkg_init calendar_gk ∗
        own_slice pre_sl (DfracOwn 1) prefix ∗
        own_slice_cap w8 pre_sl
  }}}
    calendar_gk @ "Marshal" #pre_sl #args__c
  {{{
        enc enc_sl, RET #enc_sl;
        ⌜ has_encoding enc args__c ⌝ ∗
        own_slice enc_sl (DfracOwn 1) (prefix ++ enc) ∗
        own_slice_cap w8 enc_sl
  }}}.

Proof.
  intros Hhashlen.
  wp_start as "[Hsl Hcap]". wp_auto.

  iDestruct (own_slice_small_sz with "Hown_hash") as "%Hargs_hash_sz".
  wp_pures. wp_apply (wp_slice_len). wp_load.
  wp_apply (wp_WriteInt with "[$Hsl]"). iIntros (?) "Hsl". wp_store.
  wp_pures. wp_load.
  wp_apply (wp_WriteBytes with "[$Hsl $Hown_hash]").
  iIntros (?) "[Hsl Hargs_hash_sl]". wp_store.

  wp_apply (wp_slice_len).
  wp_load. wp_apply (wp_WriteInt with "[$Hsl]").
  iIntros (?) "Hsl". wp_store. wp_pures.

  wp_load.
  wp_apply (wp_WriteSlice _ _ args__c.(events) Event.has_encoding Event.own with "[Hown_events Hsl]").
  {
    iFrame.
    iIntros (????) "!>".
    iIntros (?) "[Hown' Hsl'] HΦ".
    wp_apply (Event.wp_Encode with "[$Hsl' $Hown']").
    iApply "HΦ".
  }
  iIntros (events_enc events_sl') "(Hpsl_events & %Henc_events & Hsl)".
  wp_pures. wp_store.


  iApply "HΦ". rewrite -?app_assoc.
  iFrame. iPureIntro.

  unfold has_encoding.
  exists events_enc. 
  split; first reflexivity.
  repeat split.
  all: word || done.
Qed.

Lemma wp_Decode (enc : list u8) (enc_sl : slice.t) (args__c : calendar_gk.S.t) (suffix : list u8) (dq : dfrac):
  {{{
        is_pkg_init calendar_gk ∗
        ⌜ has_encoding enc args__c ⌝ ∗
        own_slice enc_sl dq (enc ++ suffix)
  }}}
    calendar_gk @ "Unmarshal" #enc_sl
  {{{
        suff_sl, RET (#args__c, #suff_sl);
        own_slice suff_sl dq suffix
  }}}.

Proof.
  wp_start as "[%Henc Hsl]". wp_auto.
  unfold has_encoding in Henc.
  destruct Henc as ( events_enc & Henc & Henc_events & Hevents_sz ).
  rewrite Henc. rewrite -?app_assoc.

  wp_apply wp_allocN; first done; first by val_ty.
  iIntros (?) "HhashLen". iApply array_singleton in "HhashLen". wp_pures.
  wp_apply wp_allocN; first done; first by val_ty.
  iIntros (?) "HhashBytes". iApply array_singleton in "HhashBytes". wp_pures.
  wp_load. wp_apply (wp_ReadInt with "[$Hsl]").
  iIntros (?) "Hsl". wp_pures. wp_store. wp_store. wp_load. wp_load.

  iDestruct (own_slice_small_sz with "Hsl") as %Hhash_sz.
  wp_apply (wp_ReadBytesCopy with "[$]").
  { rewrite length_app in Hhash_sz. word. }
  iIntros (??) "[Hhash' Hsl]". iApply own_slice_to_small in "Hhash'".

  wp_pures. wp_store. wp_store. wp_load. wp_store.

  wp_apply wp_ref_of_zero; first done.
  iIntros (l__eventsLen) "HeventsLen". wp_pures.

  wp_load. wp_apply (wp_ReadInt with "[Hsl]"); first simpl; iFrame.
  iIntros (?) "Hsl". wp_pures. wp_store. wp_store.

  wp_load. wp_load.
  wp_apply (wp_ReadSlice _ _ _ _ Event.has_encoding Event.own with "[Hsl]").
  {
    iIntros (???) "Hown'".
    iApply Event.own_val_ty.
    iFrame.
  } { done. }
  {
    iFrame.
    iSplit; first done.
    iSplit; first word.
    iIntros (????) "!>".
    iIntros (?) "[Hsl' Henc'] HΦ".
    wp_apply (Event.wp_Decode with "[$Hsl' $Henc']").
    iApply "HΦ".
  }
  iIntros (??) "[Hpsl_events Hsl]".
  wp_pures. wp_store. wp_store.

  replace {|
    calendar_gk.S.Hash' := args__c.(calendar_gk.S.Hash');
    calendar_gk.S.Events' := args__c.(calendar_gk.S.Events')
  |} with args__c; last (destruct args__c; reflexivity).
  iApply "HΦ". iFrame.
Qed.

End calendar_gk.
End calendar_gk.

