(*****************************************)
(* This file is autogenerated by grackle *)
(*    DO NOT MANUALLY EDIT THIS FILE     *)
(*****************************************)

From New.proof Require Import proof_prelude.
From New.proof Require Import github_com.tchajed.marshal.
From New.proof Require Import github_com.goose_lang.primitive.
From New.code Require Import github_com.mjschwenne.grackle.testdata.out.go.event_gk.
From New.generatedproof Require Import github_com.mjschwenne.grackle.testdata.out.go.event_gk.
From Grackle.test Require Import timestamp_proof_gk.
From New.code Require Import github_com.mjschwenne.grackle.testdata.out.go.timestamp_gk.

Module Event_gk.
Section Event_gk.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

#[global]
Program Instance : IsPkgInit event_gk :=
  ltac2:(build_pkg_init ()).

Definition C := event_gk.S.t.

Definition has_encoding (encoded:list u8) (args:C) : Prop :=
  ∃ (startTime_enc endTime_enc : list u8), 
  encoded = (u32_le args.(event_gk.S.Id')) ++
              (u64_le $ length $ args.(event_gk.S.Name')) ++ args.(event_gk.S.Name') ++
              startTime_enc ++
              endTime_enc
  /\ length args.(event_gk.S.Name') < 2^64
  /\ TimeStamp_gk.has_encoding startTime_enc args.(event_gk.S.StartTime')
  /\ TimeStamp_gk.has_encoding endTime_enc args.(event_gk.S.EndTime').

Definition own (args__v: event_gk.S.t) (args__c: C) (dq: dfrac) : iProp Σ :=
  "Hown_id" ∷ ⌜ args__v.(event_gk.S.Id') = args__c.(event_gk.S.Id') ⌝ ∗
  "Hown_name" ∷ ⌜ args__v.(event_gk.S.Name') = args__c.(event_gk.S.Name') ⌝ ∗
  "Hown_startTime" ∷ TimeStamp_gk.own args__v.(event_gk.S.StartTime') args__c.(event_gk.S.StartTime') dq ∗
  "Hown_endTime" ∷ TimeStamp_gk.own args__v.(event_gk.S.EndTime') args__c.(event_gk.S.EndTime') dq.

Lemma wp_Encode (args__c : event_gk.S.t) (pre_sl : slice.t) (prefix : list u8) (dq : dfrac):
  length args__c.(event_gk.S.Name') < 2^64 ->
  {{{
        is_pkg_init event_gk ∗
        own_slice pre_sl (DfracOwn 1) prefix ∗
        own_slice_cap w8 pre_sl
  }}}
    event_gk @ "Marshal" #pre_sl #args__c
  {{{
        enc enc_sl, RET #enc_sl;
        ⌜ has_encoding enc args__c ⌝ ∗
        own_slice enc_sl (DfracOwn 1) (prefix ++ enc) ∗
        own_slice_cap w8 enc_sl
  }}}.

Proof.
  intros Hnamelen.
  wp_start as "[Hsl Hcap]". wp_auto.

  wp_apply (wp_WriteInt32 with "[$Hsl $Hcap]").
  iIntros (?) "[Hsl Hcap]". wp_auto.

  wp_apply wp_AssumeNoStringOverflow. iIntros "%HnameLen". wp_auto.
  wp_apply wp_StringToBytes. iIntros (?) "HnameBytes". wp_auto.
  wp_apply (wp_WriteLenPrefixedBytes with "[$Hsl $Hcap $HnameBytes]").
  iIntros (?) "(Hsl & Hcap & HnameBytes)". wp_auto.

  wp_apply (TimeStamp_gk.wp_Encode with "[$Hsl $Hcap]"); first trivial.
  iIntros (startTime_enc ?) "(%Hargs_startTime_enc & Hsl & Hcap)". wp_auto.

  wp_apply (TimeStamp_gk.wp_Encode with "[$Hsl $Hcap]"); first trivial.
  iIntros (endTime_enc ?) "(%Hargs_endTime_enc & Hsl & Hcap)". wp_auto.


  iApply "HΦ". rewrite -?app_assoc.
  iFrame. iPureIntro.

  unfold has_encoding.
  exists startTime_enc, endTime_enc. 
  split; first reflexivity.
  done.
  
  
Qed.

Lemma wp_Decode (enc : list u8) (enc_sl : slice.t) (args__c : event_gk.S.t) (suffix : list u8) (dq : dfrac):
  {{{
        is_pkg_init event_gk ∗
        ⌜ has_encoding enc args__c ⌝ ∗
        own_slice enc_sl dq (enc ++ suffix)
  }}}
    event_gk @ "Unmarshal" #enc_sl
  {{{
        suff_sl, RET (#args__c, #suff_sl);
        own_slice suff_sl dq suffix
  }}}.

Proof.
  wp_start as "[%Henc Hsl]". wp_auto.
  unfold has_encoding in Henc.
  destruct Henc as ( startTime_enc & endTime_enc & Henc & Hlen_name & Henc_startTime & Henc_endTime ).
  rewrite Henc. rewrite -?app_assoc.

  wp_apply (wp_ReadInt32 with "[$Hsl]"). iIntros (?) "Hsl". wp_auto.

  wp_apply (wp_ReadLenPrefixedBytes with "[$Hsl]"); first word.
  iIntros (??) "[Hname_byt Hsl]". wp_auto.
  wp_apply (wp_StringFromBytes with "[$Hname_byt]").
  iIntros "Hname_byt". wp_auto.

  wp_apply (TimeStamp_gk.wp_Decode startTime_enc with "[$Hsl]"); first done.
  iIntros (startTime__v) "Hsl". wp_auto.

  wp_apply (TimeStamp_gk.wp_Decode endTime_enc with "[$Hsl]"); first done.
  iIntros (endTime__v) "Hsl". wp_auto.

  replace {|
    event_gk.S.Id' := args__c.(event_gk.S.Id');
    event_gk.S.Name' := args__c.(event_gk.S.Name');
    event_gk.S.StartTime' := args__c.(event_gk.S.StartTime');
    event_gk.S.EndTime' := args__c.(event_gk.S.EndTime')
  |} with args__c; last (destruct args__c; reflexivity).
  iApply "HΦ". iFrame.
Qed.

End Event_gk.
End Event_gk.

