(*****************************************)
(* This file is autogenerated by grackle *)
(*    DO NOT MANUALLY EDIT THIS FILE     *)
(*****************************************)

From New.proof Require Import proof_prelude.
From New.proof Require Import github_com.tchajed.marshal.
From New.code Require Import github_com.mjschwenne.grackle.testdata.out.go.event_gk.
From New.generatedproof Require Import github_com.mjschwenne.grackle.testdata.out.go.event_gk.
From Grackle.test Require Import timestamp_proof_gk.
From New.code Require Import github_com.mjschwenne.grackle.testdata.out.go.timestamp_gk.

Module Event_gk.
Section Event_gk.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

#[global]
Program Instance : IsPkgInit event_gk :=
  ltac2:(build_pkg_init ()).

Definition has_encoding (encoded:list u8) (args:event_gk.Event.t) : Prop :=
  ∃ (startTime_enc endTime_enc : list u8), 
  encoded = (u32_le args.(event_gk.Event.id)) ++
              (u64_le $ length $ args.(event_gk.Event.name')) ++ args.(event.Event.name') ++
              startTime_enc ++
              endTime_enc
  /\ TimeStamp_gk.has_encoding startTime_enc args.(startTime)
  /\ TimeStamp_gk.has_encoding endTime_enc args.(endTime).

Lemma wp_Encode (args__c : event_gk.Event.t) (pre_sl : slice.t) (prefix : list u8) (dq : dfrac):
  {{{
        is_pkg_init event_gk ∗
        own_slice pre_sl (DfracOwn 1) prefix ∗
        own_slice_cap w8 pre_sl
  }}}
    event_gk @ "Marshal" #pre_sl #args__c
  {{{
        enc enc_sl, RET #enc_sl;
        ⌜ has_encoding enc args__c ⌝ ∗
        own_slice enc_sl (DfracOwn 1) (prefix ++ enc) ∗
        own_slice_cap w8 enc_sl
  }}}.

Proof.
  iIntros (?) "[Hown Hsl] HΦ".
  wp_rec. wp_pures.
  iUnfold own in "Hown". iNamed "Hown". rewrite Hown_struct.
  wp_apply (wp_ref_to); first by val_ty.
  iIntros (?) "Hptr". wp_pures.

  wp_load. wp_apply (wp_WriteInt32 with "[$Hsl]").
  iIntros (?) "Hsl". wp_store.

  wp_apply wp_StringToBytes. iIntros (?) "Hargs_name_enc". wp_pures.
  wp_apply (wp_slice_len).
  iDestruct (own_slice_sz with "Hargs_name_enc") as "%Hargs_name_sz".
  iApply own_slice_to_small in "Hargs_name_enc".
  wp_load. wp_apply (wp_WriteInt with "[$Hsl]"). iIntros (?) "Hsl". wp_store.
  wp_load. wp_apply (wp_WriteBytes with "[$Hsl $Hargs_name_enc]").
  iIntros (?) "[Hsl _]". wp_store.

  wp_load. wp_pures. wp_apply (TimeStamp.wp_Encode with "[$Hown_startTime $Hsl]").
  iIntros (startTime_enc startTime_sl) "(%Hargs_startTime_enc & Hargs_startTime_own & Hsl)".
  wp_store.

  wp_load. wp_pures. wp_apply (TimeStamp.wp_Encode with "[$Hown_endTime $Hsl]").
  iIntros (endTime_enc endTime_sl) "(%Hargs_endTime_enc & Hargs_endTime_own & Hsl)".
  wp_store.


  wp_load. iApply "HΦ". iModIntro. rewrite -?app_assoc.
  iFrame. iPureIntro.

  unfold has_encoding. split.
  {
  exists startTime_enc, endTime_enc. 
  rewrite ?string_bytes_length.
  rewrite Hargs_name_sz.
  rewrite ?w64_to_nat_id.

  done.
  
  } done.
Qed.

Lemma wp_Decode (enc : list u8) (enc_sl : slice.t) (args__c : event_gk.Event.t) (suffix : list u8) (dq : dfrac):
  {{{
        is_pkg_init event_gk ∗
        ⌜ has_encoding enc args__c ⌝ ∗
        own_slice enc_sl dq (enc ++ suffix)
  }}}
    event_gk @ "Unmarshal" #enc_sl
  {{{
        suff_sl, RET (#args__c, suff_sl);
        own_slice suff_sl dq suffix
  }}}.

Proof.
  iIntros (?) "[%Henc Hsl] HΦ". wp_rec.
  wp_apply wp_ref_to; first done.
  iIntros (l__s) "Hs". wp_pures.
  
  wp_apply wp_ref_of_zero; first done.
  iIntros (l__id) "Hid". wp_pures.
  
  wp_apply wp_ref_of_zero; first done.
  iIntros (l__name) "Hname". wp_pures.
  
  wp_apply wp_ref_of_zero; first done.
  iIntros (l__startTime) "HstartTime". wp_pures.
  
  wp_apply wp_ref_of_zero; first done.
  iIntros (l__endTime) "HendTime". wp_pures.
  
  unfold has_encoding in Henc.
  destruct Henc as ( startTime_enc & endTime_enc & Henc & Henc_startTime & Henc_endTime ).
  rewrite Henc. rewrite -?app_assoc.

  wp_load. wp_apply (wp_ReadInt32 with "[$Hsl]"). iIntros (?) "Hsl".
  wp_pures. wp_store. wp_store.

  wp_apply wp_ref_of_zero; first done. iIntros (nameLen) "HnameLen". wp_pures.
  wp_apply wp_ref_of_zero; first done. iIntros (nameBytes) "HnameBytes". wp_pures.
  wp_load. wp_apply (wp_ReadInt with "[$Hsl]").
  iIntros (?) "Hsl". wp_pures. wp_store. wp_store. wp_load. wp_load.

  iDestruct (own_slice_small_sz with "Hsl") as %Hname_sz.
  wp_apply (wp_ReadBytesCopy with "[$]").
  { rewrite length_app in Hname_sz. word. }
  iIntros (??) "[Hname' Hsl]".

  wp_pures. wp_store. wp_store. wp_load.
  iApply own_slice_to_small in "Hname'".
  wp_apply (wp_StringFromBytes with "[$Hname']"). iIntros "_".
  wp_store.

  wp_load. wp_apply (TimeStamp.wp_Decode startTime_enc with "[$Hsl //]").
  iIntros (startTime__v ?) "[Hown_startTime Hsl]".
  iDestruct (TimeStamp.own_val_ty with "Hown_startTime") as "%Hval_startTime".
  wp_pures. wp_store. wp_store.

  wp_load. wp_apply (TimeStamp.wp_Decode endTime_enc with "[$Hsl //]").
  iIntros (endTime__v ?) "[Hown_endTime Hsl]".
  iDestruct (TimeStamp.own_val_ty with "Hown_endTime") as "%Hval_endTime".
  wp_pures. wp_store. wp_store.

  wp_load. wp_load. wp_load. wp_load. wp_load.
  wp_pures. iApply "HΦ". iModIntro. rewrite ?string_to_bytes_to_string. iFrame.
  iPureIntro. reflexivity.
Qed.

End Event_gk.
End Event_gk.

