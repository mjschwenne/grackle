(*****************************************)
(* This file is autogenerated by grackle *)
(*    DO NOT MANUALLY EDIT THIS FILE     *)
(*****************************************)

From New.proof Require Import proof_prelude.
From New.code Require Import github_com.mjschwenne.grackle.testdata.out.go.error_gk.
From New.generatedproof Require Import github_com.mjschwenne.grackle.testdata.out.go.error_gk.

Module error_gk.
Section error_gk.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ} {go_ctx : GoContext}.

Definition name_map : gmap w32 go_string := list_to_map [
                                                ((W32 0), "eOk"%go);
                                                ((W32 1), "eEndOfFile"%go);
                                                ((W32 2), "eUnknown"%go)
                                              ].
Definition value_map : gmap go_string w32 := list_to_map [
                                                 ("eOk"%go, (W32 0));
                                                 ("eEndOfFile"%go, (W32 1));
                                                 ("eUnknown"%go, (W32 2))
                                               ].

Definition is_initialized : iProp Σ :=
  "HglobalName" ∷ (global_addr error_gk.Name) ↦${DfracDiscarded} name_map ∗
  "HglobalValue" ∷ (global_addr error_gk.Value) ↦${DfracDiscarded} value_map.

Local Notation deps := (ltac2:(build_pkg_init_deps 'error_gk) : iProp Σ) (only parsing).
#[global]
Program Instance : IsPkgInit error_gk :=
  {|
    is_pkg_init_def := is_initialized;
    is_pkg_init_deps := deps;
  |}.

Inductive I :=
| eOk
| eEndOfFile
| eUnknown.

Definition to_tag i : w32 :=
  match i with
  | eOk => W32 0
  | eEndOfFile => W32 1
  | eUnknown => W32 2
  end.

End error_gk.
End error_gk.
