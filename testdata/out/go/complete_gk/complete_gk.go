//--------------------------------------
// This file is autogenerated by grackle
// DO NOT MANUALLY EDIT THIS FILE
//--------------------------------------

package complete_gk

import (
	"github.com/tchajed/marshal"

	"github.com/mjschwenne/grackle/testdata/out/go/completeint_gk"
	"github.com/mjschwenne/grackle/testdata/out/go/completeslice_gk"
	"github.com/mjschwenne/grackle/testdata/out/go/structslice_gk"
)

type S struct {
	Int     completeint_gk.S
	Slc     completeslice_gk.S
	Success bool
	Sslice  []structslice_gk.S
	Iints   []uint64
	Sints   []uint32
}

func Marshal(enc []byte, c S) []byte {
	enc = completeint_gk.Marshal(enc, c.Int)
	enc = completeslice_gk.Marshal(enc, c.Slc)
	enc = marshal.WriteBool(enc, c.Success)

	enc = marshal.WriteInt(enc, uint64(len(c.Sslice)))
	enc = marshal.WriteSlice[structslice_gk.S](enc, c.Sslice, structslice_gk.Marshal)

	enc = marshal.WriteInt(enc, uint64(len(c.Iints)))
	enc = marshal.WriteSlice[uint64](enc, c.Iints, marshal.WriteInt)

	enc = marshal.WriteInt(enc, uint64(len(c.Sints)))
	enc = marshal.WriteSlice[uint32](enc, c.Sints, marshal.WriteInt32)

	return enc
}

func Unmarshal(s []byte) (S, []byte) {

	int, s := completeint_gk.Unmarshal(s)
	slc, s := completeslice_gk.Unmarshal(s)
	success, s := marshal.ReadBool(s)
	ssliceLen, s := marshal.ReadInt(s)
	sslice, s := marshal.ReadSlice[structslice_gk.S](s, ssliceLen, structslice_gk.Unmarshal)
	iintsLen, s := marshal.ReadInt(s)
	iints, s := marshal.ReadSlice[uint64](s, iintsLen, marshal.ReadInt)
	sintsLen, s := marshal.ReadInt(s)
	sints, s := marshal.ReadSlice[uint32](s, sintsLen, marshal.ReadInt32)

	return S{
		Int:     int,
		Slc:     slc,
		Success: success,
		Sslice:  sslice,
		Iints:   iints,
		Sints:   sints,
	}, s
}
