Definition has_encoding (encoded:list u8) (args:<< lower .Name >>_gk.S.t) : Prop :=
  <<- $extEncs := (extEncFields .Fields) ->>
  <<- range $idx, $field := $extEncs ->>
  <<- if not $idx >>
  âˆƒ (<<- end ->>
  <<- $field.Name ->>_enc << end ->>
  << if len $extEncs >>: list u8), << end >>
  encoded = << range $idx, $field := .Fields ->>
              << if $idx >> ++
              << end >>
              <<- if and (isMessage .) (not (isSliceType .)) ->>
              << $field.Name ->>_enc
              <<- else if isCoqType . "go_string|u8" ->>
              (u64_le $ length $ args.(<< lower $.Name >>_gk.S.<< goName $field.Name >>')) ++ args.(<< lower $.Name >>_gk.S.<< goName $field.Name >>')
              <<- else if isSliceType . ->>
              (u64_le $ length $ args.(<< lower $.Name >>_gk.S.<< goName $field.Name >>')) ++ << $field.Name >>_enc
              <<- else if (isCoqType . "bool") ->>
              [if args.(<< lower $.Name >>_gk.S.<< goName $field.Name >>') then W8 1 else W8 0]
              <<- else ->>
              (<<- coqType $field >>_le args.(<< lower $.Name >>_gk.S.<< goName $field.Name >>'))
              <<- end ->><<- end ->>
  <<- range $idx, $field := .Fields >>
  <<- if isCoqType $field "go_string|u8" >>
  /\ length args.(<< lower $.Name >>_gk.S.<< goName $field.Name >>') < 2^64
  <<- else if isMessage . >>
  /\ << $field.TypeName ->>_gk.has_encoding << $field.Name ->>_enc args.(<< lower $.Name >>_gk.S.<< goName $field.Name ->>')
  <<- end ->>
  <<- end ->>.
