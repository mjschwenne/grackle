<< define "rocq_record_field_name" >>
<<- if .Simple ->>
<< lower .Name >>_gk.S.<< goName .Field.Name >>'
<<- else ->>
<< .Field.Name >>'
<<- end ->>
<<- end ->>

Definition has_encoding (encoded:list u8) (args:C) : Prop :=
  <<- $extEncs := (extEncFields .Fields) ->>
  <<- range $idx, $field := $extEncs ->>
  <<- if not $idx >>
  âˆƒ (<<- end ->>
  <<- $field.Name ->>_enc << end ->>
  << if len $extEncs >>: list u8), << end >>
  encoded = << range $idx, $field := .Fields ->>
              << if $idx >> ++
              << end >>
              <<- if and (isMessage .) (not (isSliceType .)) ->>
              << $field.Name ->>_enc
              <<- else if isCoqType . "go_string|u8" ->>
              (u64_le $ length $ args.(<< template "rocq_record_field_name" dict "Name" $.Name "Simple" $.Simple "Field" $field >>)) ++ args.(<< template "rocq_record_field_name" dict "Name" $.Name "Simple" $.Simple "Field" $field >>)
              <<- else if isSliceType . ->>
              (u64_le $ length $ args.(<< template "rocq_record_field_name" dict "Name" $.Name "Simple" $.Simple "Field" $field >>)) ++ << $field.Name >>_enc
              <<- else if (isCoqType . "bool") ->>
              [if args.(<< template "rocq_record_field_name" dict "Name" $.Name "Simple" $.Simple "Field" $field >>) then W8 1 else W8 0]
              <<- else if (isCoqType . "enum") ->>
              (u32_le $ << goModuleName . >>.to_tag args.(<< template "rocq_record_field_name" dict "Name" $.Name "Simple" $.Simple "Field" $field >>))
              <<- else ->>
              (<<- coqType $field >>_le args.(<< template "rocq_record_field_name" dict "Name" $.Name "Simple" $.Simple "Field" $field >>))
              <<- end ->><<- end ->>
  <<- range $idx, $field := .Fields >>
  <<- if isRepeatedType $field >>
  /\ encodes << $field.Name >>_enc args.(<< template "rocq_record_field_name" dict "Name" $.Name "Simple" $.Simple "Field" $field >>) << if isCoqType . "message" >><< .TypeName >>_gk.has_encoding<< else >><< goType . >>_has_encoding<< end >>
  /\ length args.(<< template "rocq_record_field_name" dict "Name" $.Name "Simple" $.Simple "Field" $field >>) < 2^64
  <<- else if (isCoqType $field "go_string|u8") >>
  /\ length args.(<< template "rocq_record_field_name" dict "Name" $.Name "Simple" $.Simple "Field" $field >>) < 2^64
  <<- else if isMessage . >>
  /\ << $field.TypeName ->>_gk.has_encoding << $field.Name ->>_enc args.(<< template "rocq_record_field_name" dict "Name" $.Name "Simple" $.Simple "Field" $field >>)
  <<- end ->>
  <<- end ->>.
