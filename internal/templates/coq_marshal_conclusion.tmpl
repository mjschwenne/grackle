
  iApply "HÎ¦". rewrite -?app_assoc.
  iFrame. iPureIntro.

  unfold has_encoding.
  <<- if ne (len (filterByCoqType .Fields "enum")) (len .Fields) >>
  split; last done.
  <<- end >>
  << $eenc := (extEncFields .Fields) ->>
  << if gt (len $eenc) 0 >>exists << range $idx, $field := $eenc ->>
  <<- if $idx >>, << end ->>
  <<- .Name ->>_enc
  <<- end >>.<< end >>
  <<- $bbl := (filterByCoqType .Fields "u8|list|bool|enum") ->>
  << if gt (len $bbl) 0 >>
  split; first repeat (f_equal; try word).
  << range (filterByCoqType $bbl "bool") ->> 
  { rewrite Hown_<< .Name >>. done. } 
  << end ->>
  all: try done.
  << $fs := repeatedFields .Fields ->>
  << range $idx, $f := $fs ->>
  rewrite <- Hown_<< .Name >>_sz'.
  << if eq (succ $idx) (len $fs) ->>
  done.
  <<- end >>
  <<- end ->>
  << else if gt (len (filterByCoqType .Fields "message|go_string|u8")) 0 >>
  split. all: congruence || done.
  <<- else >>
  congruence.<< end >> 
Qed.
