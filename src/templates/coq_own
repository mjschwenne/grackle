<<- define "lit" ->>
  "Hargs_<<- .Name ->>" ∷ args_ptr ↦[<<- $.Name >> :: "<<- .Name ->>"]{q} #args.(<<- .Name ->>)
<<- end ->>
<<- define "ref" ->>
    "Hargs_<<- .Name ->>" ∷ args_ptr ↦[<<- $.Name >> :: "<<- .Name ->>"]{q} #<<- .Name ->>_l ∗
  "Hargs_<<- .Name ->>_enc" ∷ << $.Name ->>.own << .Name ->>_l args.(<<- .Name ->>) q
<<- end ->>
Definition own (args_ptr:loc) (args:<<- .Name ->>) (q:dfrac) : iProp Σ :=
  <<- $refs := (refFields .Fields) ->>
  <<- range $idx, $field := $refs ->>
  <<- if not $idx >>
  ∃ (<<- end ->>
  <<- $field.Name ->>_l << end ->>
  << if len $refs >>: loc),
  << else >>
  << end >>
  <<- range $idx, $field := .Fields ->>
  << if $idx >> ∗
  << end ->>
  <<- if isRef . ->>
  << template "ref" . >>
  <<- else ->>
  << template "lit" . >>
  <<- end ->><<- end ->>.
