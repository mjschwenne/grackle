name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-rocq:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v32
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-rocq-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-rocq-${{ runner.os }}-
          purge: true
          purge-prefixes: nix-rocq-${{ runner.os }}-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never     
      - name: Build Rocq
        run: nix build -L .#rocq-build

  build-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Check style
        run: |
          gofmt -w -s .
          git diff --exit-code

      - name: Install protoc
        run: sudo apt-get install protobuf-compiler -y
      - name: Install dependencies
        run: go get -t ./...
      - name: go test
        run: go test -vet=all -v ./...

      - name: Check goose output
        run: |
          go run github.com/goose-lang/goose/cmd/goose@new -out example/goose ./example
          git diff --exit-code

  build-nix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v32
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-grackle-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-grackle-${{ runner.os }}-
          purge: true
          purge-prefixes: nix-grackle-${{ runner.os }}-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never     
      - name: Build Grackle
        run: nix build -L
